@using System.Text.RegularExpressions
@using System.ComponentModel.DataAnnotations

<MudDialog Style="width: 800px; height: 750px;">
    <DialogContent>
        <MudGrid>
            <MudItem xs="12" sm="12">
                <MudPaper Class="pa-4">
                    <MudForm @ref="form" @bind-IsValid="@success" @bind-Errors="@errors">
                        <MudTextField T="string" Label="Imiê" Required="true" RequiredError="Imiê jest wymagane!" />
                        <MudTextField T="string" Label="Nazwisko" Required="true" RequiredError="Nazwisko jest wymagane!" />

                        <MudTextField T="string" Label="Email" Required="true" RequiredError="Email jest wymagany!"
                        Validation="@(new EmailAddressAttribute() {ErrorMessage = "The email address is invalid"})" />

                        <MudTextField T="string" Label="Numer Telefonu" Placeholder="WprowadŸ numer telefonu" 
                        Mask="@(new PatternMask("+00 000 000 000"))" Required="true" RequiredError="Numer telefonu jest wymagany" />

                        <div class="d-flex">
                            <MudRadioGroup T="string" Required="true" RequiredError="Podmiot jest wymagany!">
                                <MudRadio Value="@("Personal")">Osoba fizyczna</MudRadio>
                                <MudRadio Value="@("Firm")">Firma</MudRadio>
                            </MudRadioGroup>
                        </div>
                        <div class="d-flex align-center justify-space-between">
                            <MudTooltip Text="@agreement">
                                <MudCheckBox T="bool" Required="true" RequiredError="Musisz wyraziæ zgodê" Label="Zgadzam siê!" />
                            </MudTooltip>
                            <div class="d-flex">
                                <MudButton Class="ma-2" Color="Color.Secondary" Variant="Variant.Filled" OnClick="Cancel">Anuluj</MudButton>
                                <MudButton Class="ma-2" Color="Color.Success" Variant="Variant.Filled" OnClick="Submit" Disabled="@(!success)">Wyœlij</MudButton>
                            </div>
                        </div>
                    </MudForm>
                </MudPaper>
            </MudItem>
            <MudItem xs="12" sm="12" Style="height: 250px;">
                <MudPaper Class="pa-4 mud-height-full">
                    <MudText Typo="Typo.subtitle2">@($"Errors ({errors.Length})")</MudText>
                    @foreach (var error in errors)
                    {
                        <MudText Color="@Color.Error">@error</MudText>
                    }
                </MudPaper>
            </MudItem>
        </MudGrid>
    </DialogContent>
</MudDialog>

@code {
    [CascadingParameter]
    private IMudDialogInstance MudDialog { get; set; }

    [Parameter]
    public Car Car { get; set; }

    [Parameter]
    public Color Color { get; set; }

    bool success;
    string[] errors = { };
    MudTextField<string> pwField;
    MudForm form;
    string agreement = @"<bold>Zgoda na Przetwarzanie Danych Osobowych</bold><br />
                         Wyra¿am zgodê na przetwarzanie moich danych osobowych<br /> 
                         przez Car Auctions w celu realizacji procesu zakupu <br />
                         i sprzeda¿y pojazdów. Obejmuje to, ale nie ogranicza <br />
                         siê do, kontaktowania siê ze mn¹ w sprawie moich zapytañ, <br />
                         przetwarzania transakcji oraz œwiadczenia us³ug posprzeda¿owych. <br />
                         Rozumiem, ¿e moje dane osobowe bêd¹ przetwarzane zgodnie <br />
                         z obowi¹zuj¹cymi przepisami o ochronie danych osobowych <br />
                         oraz polityk¹ prywatnoœci firmy. Jestem œwiadomy/a, ¿e mam prawo <br />
                         do wycofania zgody w dowolnym momencie, kontaktuj¹c <br />
                         siê z Car Auctions pod danym adresem.";

    private IEnumerable<string> PasswordStrength(string pw)
    {
        if (string.IsNullOrWhiteSpace(pw))
        {
            yield return "Password is required!";
            yield break;
        }
        if (pw.Length < 8)
            yield return "Password must be at least of length 8";
        if (!Regex.IsMatch(pw, @"[A-Z]"))
            yield return "Password must contain at least one capital letter";
        if (!Regex.IsMatch(pw, @"[a-z]"))
            yield return "Password must contain at least one lowercase letter";
        if (!Regex.IsMatch(pw, @"[0-9]"))
            yield return "Password must contain at least one digit";
    }

    private string PasswordMatch(string arg)
    {
        if (pwField.Value != arg)
            return "Passwords don't match";
        return null;
    }

    private void Submit() 
    {
        MudDialog.Close(DialogResult.Ok(true));
    }

    private void Cancel()
    {
        form.ResetAsync();
        MudDialog.Cancel();
    }
}